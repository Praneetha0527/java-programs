class Solution {
    public int minDistance(String word1,String word2){
        int w1=word1.length();
        int w2=word2.length();
        int[][] dp=new int[w1][w2];
        for(int[] row:dp)Arrays.fill(row,-1);
        return mind(w1-1,w2-1,word1,word2,dp);
    }

    public int mind(int i,int j,String s1,String s2,int[][] dp){
        if(i<0)return j+1;
        if(j<0)return i+1;
        if(dp[i][j]!=-1)return dp[i][j];

        if(s1.charAt(i)==s2.charAt(j))
            dp[i][j]=mind(i-1,j-1,s1,s2,dp);
        else{
            int insert=mind(i,j-1,s1,s2,dp);
            int delete=mind(i-1,j,s1,s2,dp);
            int replace=mind(i-1,j-1,s1,s2,dp);
            dp[i][j]=1+Math.min(insert,Math.min(delete,replace));
        }
        return dp[i][j];
    }
}
